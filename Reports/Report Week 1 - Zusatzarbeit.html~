<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><!--This file was converted to xhtml by OpenOffice.org - see http://xml.openoffice.org/odf2xhtml for more info.--><head profile="http://dublincore.org/documents/dcmi-terms/"><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8"/><title xml:lang="en-US">- no title specified</title><meta name="DCTERMS.title" content="" xml:lang="en-US"/><meta name="DCTERMS.language" content="en-US" scheme="DCTERMS.RFC4646"/><meta name="DCTERMS.source" content="http://xml.openoffice.org/odf2xhtml"/><meta name="DCTERMS.creator" content="Anton"/><meta name="DCTERMS.issued" content="2009-05-21T22:38:00" scheme="DCTERMS.W3CDTF"/><meta name="DCTERMS.contributor" content="Anton"/><meta name="DCTERMS.modified" content="2009-05-21T22:38:00" scheme="DCTERMS.W3CDTF"/><meta name="DCTERMS.provenance" content="" xml:lang="en-US"/><meta name="DCTERMS.subject" content="," xml:lang="en-US"/><link rel="schema.DC" href="http://purl.org/dc/elements/1.1/" hreflang="en"/><link rel="schema.DCTERMS" href="http://purl.org/dc/terms/" hreflang="en"/><link rel="schema.DCTYPE" href="http://purl.org/dc/dcmitype/" hreflang="en"/><link rel="schema.DCAM" href="http://purl.org/dc/dcam/" hreflang="en"/><style type="text/css">
	@page {  }
	table { border-collapse:collapse; border-spacing:0; empty-cells:show }
	td, th { vertical-align:top; font-size:12pt;}
	h1, h2, h3, h4, h5, h6 { clear:both }
	ol, ul { margin:0; padding:0;}
	li { list-style: none; margin:0; padding:0;}
	<!-- "li span.odfLiEnd" - IE 7 issue-->
	li span. { clear: both; line-height:0; width:0; height:0; margin:0; padding:0; }
	span.footnodeNumber { padding-right:1em; }
	span.annotation_style_by_filter { font-size:95%; font-family:Arial; background-color:#fff000;  margin:0; border:0; padding:0;  }
	* { margin:0;}
	.P1 { font-size:12pt; margin-bottom:0.139in; margin-top:0in; font-family:Arial; writing-mode:lr-tb; }
	.P10_borderStart { font-size:12pt; margin-top:0in; font-family:Arial; writing-mode:lr-tb; text-align:right ! important; padding-left:0in; padding-right:0in; padding-top:0in; border-left-style:none; border-right-style:none; border-top-style:none; padding-bottom:0in;  border-bottom-style:none; }
	.P10 { font-size:12pt; font-family:Arial; writing-mode:lr-tb; text-align:right ! important; padding-left:0in; padding-right:0in; border-left-style:none; border-right-style:none; padding-bottom:0in; padding-top:0in;  border-top-style:none; border-bottom-style:none; }
	.P10_borderEnd { font-size:12pt; margin-bottom:0in; font-family:Arial; writing-mode:lr-tb; text-align:right ! important; padding-left:0in; padding-right:0in; padding-bottom:0.0138in; border-left-style:none; border-right-style:none; border-bottom-width:0.018cm; border-bottom-style:solid; border-bottom-color:#000000; padding-top:0in;  border-top-style:none;}
	.P11_borderStart { font-size:12pt; margin-top:0in; font-family:Arial; writing-mode:lr-tb; text-align:center ! important; padding-left:0in; padding-right:0in; padding-top:0in; border-left-style:none; border-right-style:none; border-top-style:none; letter-spacing:0.0693in; font-weight:bold; padding-bottom:0in;  border-bottom-style:none; }
	.P11 { font-size:12pt; font-family:Arial; writing-mode:lr-tb; text-align:center ! important; padding-left:0in; padding-right:0in; border-left-style:none; border-right-style:none; letter-spacing:0.0693in; font-weight:bold; padding-bottom:0in; padding-top:0in;  border-top-style:none; border-bottom-style:none; }
	.P11_borderEnd { font-size:12pt; margin-bottom:0in; font-family:Arial; writing-mode:lr-tb; text-align:center ! important; padding-left:0in; padding-right:0in; padding-bottom:0.0138in; border-left-style:none; border-right-style:none; border-bottom-width:0.018cm; border-bottom-style:solid; border-bottom-color:#000000; letter-spacing:0.0693in; font-weight:bold; padding-top:0in;  border-top-style:none;}
	.P12_borderStart { font-size:9pt; margin-top:0in; font-family:Arial; writing-mode:lr-tb; text-align:right ! important; padding-left:0in; padding-right:0in; padding-top:0in; border-left-style:none; border-right-style:none; border-top-style:none; padding-bottom:0in;  border-bottom-style:none; }
	.P12 { font-size:9pt; font-family:Arial; writing-mode:lr-tb; text-align:right ! important; padding-left:0in; padding-right:0in; border-left-style:none; border-right-style:none; padding-bottom:0in; padding-top:0in;  border-top-style:none; border-bottom-style:none; }
	.P12_borderEnd { font-size:9pt; margin-bottom:0in; font-family:Arial; writing-mode:lr-tb; text-align:right ! important; padding-left:0in; padding-right:0in; padding-bottom:0.0138in; border-left-style:none; border-right-style:none; border-bottom-width:0.018cm; border-bottom-style:solid; border-bottom-color:#000000; padding-top:0in;  border-top-style:none;}
	.P13 { font-size:10pt; margin-bottom:0in; margin-top:0in; font-family:Arial; writing-mode:lr-tb; margin-left:0in; margin-right:0in; text-indent:0.4917in; }
	.P14 { font-size:10pt; margin-bottom:0in; margin-top:0in; font-family:Arial; writing-mode:lr-tb; margin-left:0in; margin-right:0in; text-align:justify ! important; text-indent:0.4917in; }
	.P15 { font-size:10pt; margin-bottom:0in; margin-top:0in; font-family:Arial; writing-mode:lr-tb; margin-left:0.4917in; margin-right:0in; text-indent:0.4917in; }
	.P16 { font-size:10pt; margin-bottom:0in; margin-top:0in; font-family:Arial; writing-mode:lr-tb; margin-left:0.4917in; margin-right:0in; text-align:justify ! important; text-indent:0.4917in; }
	.P17 { font-size:10pt; margin-bottom:0in; margin-top:0in; font-family:Arial; writing-mode:lr-tb; margin-left:0.9835in; margin-right:0in; text-indent:0.4917in; }
	.P18 { font-size:10pt; margin-bottom:0in; margin-top:0in; font-family:Arial; writing-mode:lr-tb; margin-left:1.4752in; margin-right:0in; text-indent:0.4917in; }
	.P19 { font-size:12pt; margin:100%; margin-bottom:0in; margin-left:0.5in; margin-right:0in; margin-top:0in; text-indent:0in; font-family:Arial; writing-mode:lr-tb; line-height:150%; text-align:justify ! important; }
	.P2 { font-size:12pt; margin-bottom:0.139in; margin-top:0in; font-family:Arial; writing-mode:lr-tb; text-align:justify ! important; }
	.P3 { font-size:12pt; margin-bottom:0.139in; margin-top:0in; font-family:Arial; writing-mode:lr-tb; text-align:justify ! important; }
	.P4 { font-size:12pt; margin-bottom:0in; margin-top:0in; font-family:Arial; writing-mode:lr-tb; line-height:150%; text-align:justify ! important; letter-spacing:0.0417in; }
	.P5 { font-size:12pt; margin-bottom:0in; margin-top:0in; font-family:Arial; writing-mode:lr-tb; text-align:justify ! important; }
	.P6 { font-size:10pt; margin-bottom:0in; margin-top:0in; font-family:Arial; writing-mode:lr-tb; }
	.P7 { font-size:10pt; margin-bottom:0in; margin-top:0in; font-family:Arial; writing-mode:lr-tb; }
	.P8 { font-size:10pt; margin-bottom:0in; margin-top:0in; font-family:Arial; writing-mode:lr-tb; text-align:justify ! important; }
	.P9 { font-size:10pt; margin-bottom:0in; margin-top:0in; font-family:Cambria; writing-mode:lr-tb; }
	.T1 { font-size:9pt; }
	.T2 { letter-spacing:0.0693in; font-weight:bold; }
	<!-- ODF styles with no properties representable as CSS -->
	.T3 { }
	</style></head><body dir="ltr" style="max-width:8.2681in;margin-top:0.9839in; margin-bottom:0.7874in; margin-left:0.9839in; margin-right:0.9839in; writing-mode:lr-tb; "><p class="P12_borderStart">Roth Anton, Quignon Christoph</p><p class="P10"><span class="T1">Sommersemester 2009</span><span class="T2"> </span></p><p class="P11_borderEnd">Project Report – Week 1</p><p class="P4"> </p><p class="P4">Topic:</p><p class="P5">For the purpose to get 6 ECTS points we are attending an additional project. This project includes, following a black line along a closed way, recognizing a full turn and remembering the way and driving it without the black line again. Our first task in this project was to follow the black line with usage of the “SensorLight“ of the NXT-Robot.  </p><p class="P1"> </p><p class="P4">Short explanation of the NXC-Code</p><p class="P2">The first thing to mention is that we have two solutions at this moment. Both of these solutions have the same idea of observing the “SensorLight” constantly and reacting on changes immediately. The way, how we managed it to serve this goal is in both solutions different. At this point we want to keep these two solutions for deciding which one fits better in the following exercises.</p><p class="P2">Because of keeping the code explanation short and simple, we’ll concentrate on the main ideas of solving the task mentioned above. In the first code example the idea is to save the actual parameter-value of the “SensorLight” into a variable. This variable is checked one time in a great loop whether the “SensorLight” has lost the black line or not. If the “SensorLight” is on the line then the robot drives straight ahead. If not the robot is going to search the line by driving left and right. During the left/right move every millisecond it is checked whether the “SensorLight” is back on line or not. If it’s back on the line the NXT-Robot starts again to drive ahead. </p><p class="P5">The ideas of the second code are different tasks, which are observing the “SensorLight” and interacting together. This means exactly that there are always two or more tasks running. One task to achieve the actual assignment, like searching the line and another one to observe it by checking the “SensorLight” as often as possible. Whenever the aim is reached the assigned task is canceled and another task is called in order to fulfill the next achievement. </p><p class="P2"> </p><p class="P4">Problem:</p><p class="P2">During this task we had to face some problems. In the NXT-Guide the command “stop” is mentioned. It’s for stopping a specific task. This command is only supported with the “Extended-Firmware” for the NXT-Robot, which is available at “http://bricxcc.sourceforge.net/”.  The next and last problem was to recognize that the command “RotateMotorEx” is apparently not stoppable, so we had to rewrite the search section in the second code. As we used the “RotateMotorEx” command the NXT-Robot has done some none traceable movements.</p><p class="P2"> </p><p class="P3"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4"> </p><p class="P4">Attachement:</p><ol><li><p class="P19" style="margin-left:1.27cm;"><span style="display:block;float:left;min-width:0cm">1.</span>NXC – Code<span class="odfLiEnd"/> </p></li></ol><p class="P6">int speed = 60;</p><p class="P6">int schwelle = 54;</p><p class="P6">int aktuell = 0;</p><p class="P6">bool lastright = 0;</p><p class="P6">int time = 40;</p><p class="P6">int zaehler = 0;</p><p class="P6"> </p><p class="P6">task check() {</p><p class="P6"><span class="T3">    </span><span> while (true){</span></p><p class="P6"><span> </span><span> aktuell=Sensor(IN_1);</span></p><p class="P6"><span> }</span></p><p class="P6">}</p><p class="P6"> </p><p class="P6">task stay() {</p><p class="P13">SetSensorLight(IN_1);</p><p class="P13">while(true)</p><p class="P13">{</p><p class="P15">while (aktuell&gt;=schwelle)    //weiß</p><p class="P6"><span class="T3"> </span><span> </span><span> {</span></p><p class="P13"><span class="T3">     </span><span> </span><span> zaehler = 0;</span></p><p class="P6"><span class="T3">     </span><span> </span><span> </span><span> if (lastright) {</span></p><p class="P6"><span class="T3">        </span><span> </span><span> </span><span> </span><span> lastright=0;</span></p><p class="P6"><span class="T3">        </span><span> </span><span> </span><span> </span><span> OnFwdSync(OUT_AB, speed, 100); //left</span></p><p class="P6"><span class="T3">        </span><span> </span><span> </span><span> </span><span> while(aktuell&gt;=schwelle &amp;&amp; zaehler &lt; time){</span></p><p class="P6"><span class="T3">        </span><span> </span><span> </span><span> </span><span> </span><span> Wait(1);</span></p><p class="P6"><span class="T3">        </span><span> </span><span> </span><span> </span><span> </span><span> zaehler++;</span></p><p class="P6"><span class="T3">     </span><span> </span><span> </span><span> </span><span> }</span></p><p class="P6"><span class="T3">        </span><span> </span><span> </span><span> </span><span> time=time + 300;</span></p><p class="P6"><span class="T3">        </span><span> </span><span> </span><span> </span><span> Off(OUT_AB);</span></p><p class="P6"><span class="T3">     </span><span> </span><span> </span><span> }</span></p><p class="P6"><span class="T3">     </span><span> </span><span> </span><span> else {</span></p><p class="P6"><span class="T3">        </span><span> </span><span> </span><span> </span><span> lastright=1;</span></p><p class="P6"><span class="T3">        </span><span> </span><span> </span><span> </span><span> OnFwdSync(OUT_AB, speed, -100);   //right</span></p><p class="P13"><span class="T3">        </span><span> </span><span> </span><span> while(aktuell&gt;=schwelle &amp;&amp; zaehler &lt; time){</span></p><p class="P17"><span class="T3">        </span><span> </span><span> Wait(1);</span></p><p class="P17"><span class="T3">        </span><span> </span><span> zaehler++;</span></p><p class="P18">}</p><p class="P13"><span class="T3">        </span><span> </span><span> </span><span> time=time + 300;</span></p><p class="P6"><span class="T3">        </span><span> </span><span> </span><span> </span><span> Off(OUT_AB);</span></p><p class="P17">}</p><p class="P6"><span class="T3">     </span><span> </span><span> }</span></p><p class="P6"><span class="T3">     </span><span> </span><span> time=40;</span></p><p class="P6"><span class="T3">     </span><span> </span><span> OnFwdSync(OUT_AB, speed, 0);</span></p><p class="P6"><span> }</span></p><p class="P6">}</p><p class="P7">     </p><p class="P6">task main()</p><p class="P6">{</p><p class="P6"><span> SetSensorLight(IN_1);</span></p><p class="P6"><span> Precedes(check, stay);</span></p><p class="P6"><span> OnFwdSync(OUT_AB, speed, 0);</span></p><p class="P6">}</p><p class="P9"> </p><p class="P9"> </p><p class="P9"> </p><p class="P9"> </p><p class="P9"> </p><p class="P9"> </p><ol><li><p class="P19" style="margin-left:1.27cm;"><span style="display:block;float:left;min-width:0cm">2.</span>NXC – Code<span class="odfLiEnd"/> </p></li></ol><p class="P8">//Angaben</p><p class="P8">//black line: 25,26</p><p class="P8">//gruener Boden: 43-46</p><p class="P8">//Grau: 54</p><p class="P8">//white Paper: 59</p><p class="P8"> </p><p class="P8">int lightIntens = 40; //Schwellwert für Lichtsensor</p><p class="P8">int speed = 60; //Fahrspeed</p><p class="P8">int time = 40;</p><p class="P8"> </p><p class="P8">task drive()</p><p class="P8">{</p><p class="P8"><span class="T3">      </span><span> OnFwdSync(OUT_AB, speed, 0);</span></p><p class="P8">}</p><p class="P8"> </p><p class="P8">task search()</p><p class="P8">{</p><p class="P14">time = 40;</p><p class="P8"><span class="T3">    </span><span> while(true){</span></p><p class="P8"><span class="T3">        </span><span> </span><span> OnFwdSync(OUT_AB, speed, 100); //left</span></p><p class="P8"><span class="T3">        </span><span> </span><span> Wait(time);</span></p><p class="P8"><span class="T3">        </span><span> </span><span> time=time + 300;</span></p><p class="P8"><span class="T3">        </span><span> </span><span> OnFwdSync(OUT_AB, speed, -100);   //right</span></p><p class="P8"><span class="T3">        </span><span> </span><span> Wait(time);</span></p><p class="P8"><span class="T3">        </span><span> </span><span> time=time + 300;</span></p><p class="P8"><span> }</span></p><p class="P8">}</p><p class="P8"> </p><p class="P8">sub aufliniepruefer()</p><p class="P8">{</p><p class="P8"><span class="T3">   </span><span> start drive;</span></p><p class="P8"><span class="T3">   </span><span> SetSensorLight(IN_1);</span></p><p class="P8"><span> while(true)</span></p><p class="P8"><span> {</span></p><p class="P8"><span> </span><span> if(Sensor(IN_1) &gt; lightIntens)</span></p><p class="P8"><span class="T3">    </span><span> </span><span> {</span></p><p class="P8"><span class="T3">       </span><span> </span><span> </span><span> Off(OUT_AB);</span></p><p class="P8"><span class="T3">       </span><span> </span><span> </span><span> break;</span></p><p class="P8"><span class="T3">    </span><span> </span><span> }</span></p><p class="P8"><span class="T3">  </span><span> }</span></p><p class="P8">}</p><p class="P8"> </p><p class="P8">sub wegvonliniepruefer()</p><p class="P8">{</p><p class="P8"><span> SetSensorLight(IN_1);</span></p><p class="P8"><span> while(true)</span></p><p class="P8"><span> {</span></p><p class="P8"><span> </span><span> if(Sensor(IN_1) &lt;= lightIntens)</span></p><p class="P14"><span class="T3">  </span><span> {</span></p><p class="P16"><span class="T3">       </span><span> stop search;</span></p><p class="P8"><span class="T3">       </span><span> </span><span> </span><span> Off(OUT_AB);</span></p><p class="P8"><span class="T3">       </span><span> </span><span> </span><span> break;</span></p><p class="P16">}</p><p class="P8"><span class="T3">  </span><span> }</span></p><p class="P8">}</p><p class="P8"> </p><p class="P8"> </p><p class="P8"> </p><p class="P8"> </p><p class="P8"> </p><p class="P8">task main()</p><p class="P8">{</p><p class="P8"><span> SetSensorLight(IN_1);</span></p><p class="P8"><span> while(true){</span></p><p class="P8"><span class="T3">    </span><span> </span><span> aufliniepruefer();</span></p><p class="P8"><span class="T3">    </span><span> </span><span> start search;</span></p><p class="P8"><span class="T3">    </span><span> </span><span> wegvonliniepruefer();</span></p><p class="P8"><span class="T3">    </span><span> </span><span> Wait(100);</span></p><p class="P8"><span class="T3">    </span><span> }</span></p><p class="P8">}</p><p class="P9"> </p></body></html>
